@use 'sass:map';
@use '../variables/sizing' as sizing;

/* 
FLEX MODULE â€“ container & item behaviors
*/

/* Display */
.flex { display: flex !important; }
.inline-flex { display: inline-flex !important; }

/* Direction */
.flex-row { flex-direction: row !important; }
.flex-row-reverse { flex-direction: row-reverse !important; }
.flex-col { flex-direction: column !important; }
.flex-col-reverse { flex-direction: column-reverse !important; }

/* Wrapping */
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

/* Align Items */
.items-start { align-items: flex-start !important; }
.items-center { align-items: center !important; }
.items-end { align-items: flex-end !important; }
.items-stretch { align-items: stretch !important; }
.items-baseline { align-items: baseline !important; }

/* Align Self */
.self-auto { align-self: auto !important; }
.self-start { align-self: flex-start !important; }
.self-center { align-self: center !important; }
.self-end { align-self: flex-end !important; }
.self-stretch { align-self: stretch !important; }
.self-baseline { align-self: baseline !important; }

/* Grow / Shrink */
.grow { flex-grow: 1 !important; }
.grow-0 { flex-grow: 0 !important; }
.shrink { flex-shrink: 1 !important; }
.shrink-0 { flex-shrink: 0 !important; }

/* Flex shorthand */
.flex-1 { flex: 1 1 0% !important; }
.flex-auto { flex: 1 1 auto !important; }
.flex-initial { flex: 0 1 auto !important; }
.flex-none { flex: none !important; }

/* Order */
.order-first { order: -9999 !important; }
.order-last { order: 9999 !important; }
@for $i from 0 through 12 {
  .order-#{$i} { order: $i !important; }
}

/* Flex Basis */
@each $name, $val in sizing.$width {
  .basis-#{$name} { flex-basis: $val !important; }
}

@each $name, $val in map.get(sizing.$sizing, 'fixed-sizes') {
  .basis-#{$name} { flex-basis: $val !important; }
}

.basis-0 { flex-basis: 0 !important; }

/* Place Shorthands */
.place-items-center { place-items: center !important; }
.place-content-center { place-content: center !important; }
.place-self-center { place-self: center !important; }
